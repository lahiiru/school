----------------------------------------------------------------------
    TO BE COVERED - OUTLINE
----------------------------------------------------------------------
    Pull Github repo
    Copy framework files with Gitignore

------- Last day & CLI     -------------------------------------------

    path(), asset(), redirect

    php app/console list
    php app/console server:run
    php app/console generate:controller*
    php app/console debug:router
    php app/console router:match
    php app/console debug:config
    php app/console debug:twig
    php app/console cache:clear
    php app/console doctrine:database:create*
    php app/console generate:doctrine:entity**
    php app/console generate:doctrine:crud**
    php app/console doctrine:schema:update --force*

------- Doctrine & Routing --------------------------------------------

    Ref# http://symfony.com/doc/2.8/book/routing.html

    routing.yml
    example
        blog:
            path:      /blog/{page}
            defaults:  { _controller: AppBundle:Blog:index, page: 1 }
    /blog/{slug}
    defaults
    prefixes

    Ref# http://symfony.com/doc/2.8/book/doctrine.html

    Repositories
    Mapping
    DQL
    DTO
    example
        public function getClientStatusDTO($runningPackage){
            //ut temporal hardcoded fixture
            $query = $this->em->createQuery("SELECT NEW AppBundle\DTO\ClientStatusDTO(su.name,MAX(u.date),SUM(u.kbytes),su.state) FROM AppBundle\Entity\slave_usage u JOIN u.usage_type ut JOIN u.slave_user as su JOIN su.auth_user as au WHERE ut.id=1 AND au=$this->id AND  :st < u.date AND u.date < :end GROUP BY su.sid");
            $pstart=$runningPackage->getStart();
            $pend=$runningPackage->getEnd();
            $query->setParameter('st', $pstart)
                ->setParameter('end', $pend);
            $result = $query->getResult();
            if(empty($result)){
                return null;
            }
            return $result;
        }


------ Forms ----------------------------------------------------------

    Ref# http://symfony.com/doc/current/book/forms.html


------- Why symfony? --------------------------------------------------

    Have you find it easy?

------ Installing and configuring new bundles -------------------------

    Install composer
    Install FOSUserBundle (use phpStorm terminal)
    Create user:
        php app/console fos:user:create admin
    Try to access /
    Promote the user:
        php app/console fos:user:promote admin
        ROLE_ADMIN or any custom role
    Now should be able to access / after login as admin.
    Override FOSUserBundle views
    Explain it's structure

------- Applying template ---------------------------------------------

    Injecting custom login template
    Injecting form templates

-----------------------------------------------------------------------